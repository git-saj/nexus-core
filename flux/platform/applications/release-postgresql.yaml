apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: postgresql-cluster
  namespace: flux-system
spec:
  interval: 10m
  timeout: 5m
  chart:
    spec:
      chart: cluster
      version: ">=0.0.8"
      sourceRef:
        kind: HelmRepository
        name: cnpg
  releaseName: postgresql-cluster
  targetNamespace: postgres-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  test:
    enable: true
  driftDetection:
    mode: warn
  values:
    # PostgreSQL type and version
    type: postgresql
    version:
      postgresql: "16"

    # Cluster configuration
    cluster:
      instances: 2

      # Storage configuration using Longhorn
      storage:
        size: 20Gi
        storageClass: longhorn

      # Resources for 2-node homelab environment
      resources:
        requests:
          memory: "256Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "1000m"

      # PostgreSQL configuration parameters
      postgresql:
        parameters:
          max_connections: "100"
          shared_buffers: "128MB"
          effective_cache_size: "512MB"
          maintenance_work_mem: "64MB"
          checkpoint_completion_target: "0.9"
          wal_buffers: "16MB"
          default_statistics_target: "100"
          random_page_cost: "1.1"
          effective_io_concurrency: "200"
          work_mem: "4MB"
          min_wal_size: "1GB"
          max_wal_size: "4GB"

      # Monitoring configuration
      monitoring:
        enabled: false

      # Affinity to spread replicas across 2 nodes
      affinity:
        topologyKey: kubernetes.io/hostname

    # Bootstrap configuration
    initdb:
      database: app
      owner: app
      secret:
        name: postgresql-credentials

    # Backups configuration - commented out for now
    backups:
      enabled: false
    #   provider: s3
    #   destinationPath: "s3://postgres-backups"
    #   retentionPolicy: "30d"
    #   s3:
    #     region: "us-east-1"
    #     bucket: "postgres-backups"
    #     path: "/"
    #     accessKey: ""
    #     secretKey: ""
    #   secret:
    #     create: true
    #     name: backup-credentials
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: postgresql-credentials
  namespace: postgres-system
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    name: postgresql-credentials
    creationPolicy: Owner
    template:
      type: kubernetes.io/basic-auth
      data:
        username: "{{ .username }}"
        password: "{{ .password }}"
  data:
    - secretKey: username
      remoteRef:
        key: secret/data/postgres
        property: username
    - secretKey: password
      remoteRef:
        key: secret/data/postgres
        property: password
